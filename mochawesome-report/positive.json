{
  "stats": {
    "suites": 1,
    "tests": 9,
    "passes": 9,
    "pending": 0,
    "failures": 0,
    "start": "2025-07-21T00:26:09.029Z",
    "end": "2025-07-21T00:26:12.055Z",
    "duration": 3026,
    "testsRegistered": 9,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "df9a2cc2-8e52-4161-a275-be077599c90c",
      "title": "",
      "fullFile": "C:\\Users\\Dave\\Desktop\\Dave\\DESARROLLO\\prueba\\tests\\positive.spec.js",
      "file": "\\tests\\positive.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ee202493-55f0-42dd-afee-57c6ff42b5f7",
          "title": "API FakeStore Automation – Positivos",
          "fullFile": "C:\\Users\\Dave\\Desktop\\Dave\\DESARROLLO\\prueba\\tests\\positive.spec.js",
          "file": "\\tests\\positive.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "GET  /products → array de productos",
              "fullTitle": "API FakeStore Automation – Positivos GET  /products → array de productos",
              "timedOut": false,
              "duration": 756,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { status, data } = await api.fetchAll();\nexpect(status).to.equal(200);\nexpect(data).to.be.an('array').and.not.empty;",
              "err": {},
              "uuid": "bbffede0-9048-47ae-8fa7-e7966d1f0268",
              "parentUUID": "ee202493-55f0-42dd-afee-57c6ff42b5f7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET  /products/1 → producto id=1",
              "fullTitle": "API FakeStore Automation – Positivos GET  /products/1 → producto id=1",
              "timedOut": false,
              "duration": 187,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { status, data } = await api.fetchOne(1);\nexpect(status).to.equal(200);\nexpect(data).to.have.property('id', 1);",
              "err": {},
              "uuid": "762ebc95-0de2-44aa-94aa-56fbc950a4dc",
              "parentUUID": "ee202493-55f0-42dd-afee-57c6ff42b5f7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET  /products/999999 → id inexistente (status 200)",
              "fullTitle": "API FakeStore Automation – Positivos GET  /products/999999 → id inexistente (status 200)",
              "timedOut": false,
              "duration": 188,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { status } = await api.fetchOne(999999);\nexpect(status).to.equal(200);",
              "err": {},
              "uuid": "e1bc0f2e-5a28-4b68-8c62-2450c7886bf1",
              "parentUUID": "ee202493-55f0-42dd-afee-57c6ff42b5f7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "POST /products → crea producto",
              "fullTitle": "API FakeStore Automation – Positivos POST /products → crea producto",
              "timedOut": false,
              "duration": 196,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { status, data } = await api.create();\nexpect(status).to.equal(200);\nexpect(data).to.have.property('id');\ncreatedId = data.id;",
              "err": {},
              "uuid": "6a3c4ef6-1e92-4dce-a299-245ed6e1912f",
              "parentUUID": "ee202493-55f0-42dd-afee-57c6ff42b5f7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "PUT  /products/1 → actualiza existente",
              "fullTitle": "API FakeStore Automation – Positivos PUT  /products/1 → actualiza existente",
              "timedOut": false,
              "duration": 197,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { status, data } = await api.update(1);\nexpect(status).to.equal(200);\nexpect(data).to.have.property('id', 1);",
              "err": {},
              "uuid": "bd6f13fb-a175-4ae9-9bb9-8d4ca9f1b5b4",
              "parentUUID": "ee202493-55f0-42dd-afee-57c6ff42b5f7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "PUT  /products/999999 → actualizar inexistente (status 200)",
              "fullTitle": "API FakeStore Automation – Positivos PUT  /products/999999 → actualizar inexistente (status 200)",
              "timedOut": false,
              "duration": 198,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { status } = await api.update(999999);\nexpect(status).to.equal(200);",
              "err": {},
              "uuid": "3f0ff54b-1c65-40f7-a7af-facb4b4b571b",
              "parentUUID": "ee202493-55f0-42dd-afee-57c6ff42b5f7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "DELETE /products/1 → elimina existente",
              "fullTitle": "API FakeStore Automation – Positivos DELETE /products/1 → elimina existente",
              "timedOut": false,
              "duration": 287,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { status, data } = await api.remove(1);\nexpect(status).to.equal(200);\nexpect(data).to.have.property('id');",
              "err": {},
              "uuid": "aab8498e-e9fe-4e78-b87d-538bd0a25127",
              "parentUUID": "ee202493-55f0-42dd-afee-57c6ff42b5f7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "DELETE /products/999999 → elimina inexistente (status 200)",
              "fullTitle": "API FakeStore Automation – Positivos DELETE /products/999999 → elimina inexistente (status 200)",
              "timedOut": false,
              "duration": 283,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { status } = await api.remove(999999);\nexpect(status).to.equal(200);",
              "err": {},
              "uuid": "fe2c561a-5285-499f-b023-9a575238019c",
              "parentUUID": "ee202493-55f0-42dd-afee-57c6ff42b5f7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Parallel requests → 3 respuestas 200",
              "fullTitle": "API FakeStore Automation – Positivos Parallel requests → 3 respuestas 200",
              "timedOut": false,
              "duration": 720,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const results = await api.parallelRequests();\nexpect(results).to.have.length(3);\nresults.forEach(r => expect(r.status).to.equal(200));",
              "err": {},
              "uuid": "109519e6-61b7-49d7-bac6-bfba4e90ee95",
              "parentUUID": "ee202493-55f0-42dd-afee-57c6ff42b5f7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bbffede0-9048-47ae-8fa7-e7966d1f0268",
            "762ebc95-0de2-44aa-94aa-56fbc950a4dc",
            "e1bc0f2e-5a28-4b68-8c62-2450c7886bf1",
            "6a3c4ef6-1e92-4dce-a299-245ed6e1912f",
            "bd6f13fb-a175-4ae9-9bb9-8d4ca9f1b5b4",
            "3f0ff54b-1c65-40f7-a7af-facb4b4b571b",
            "aab8498e-e9fe-4e78-b87d-538bd0a25127",
            "fe2c561a-5285-499f-b023-9a575238019c",
            "109519e6-61b7-49d7-bac6-bfba4e90ee95"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3012,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "11.7.1"
    },
    "mochawesome": {
      "options": {
        "quiet": true,
        "reportFilename": "positive",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "mochawesome-report",
        "reportFilename": "positive",
        "overwrite": "true",
        "quiet": "true"
      },
      "version": "6.2.0"
    }
  }
}